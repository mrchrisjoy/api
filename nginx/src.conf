server_tokens off;
# $domain variable to be rewritten

server {
    listen 80;
    listen [::]:80;
    server_name $domain;

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }

    location ^~ /.well-known {
        allow all;
        root /data/letsencrypt/;
    }
}

server {
    listen      443           ssl http2;
    listen [::]:443           ssl http2;
    server_name $domain;

    ssl                       on;

    add_header                Strict-Transport-Security "max-age=31536000" always;

    ssl_session_cache         shared:SSL:20m;
    ssl_session_timeout       10m;

    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_stapling              on;
    ssl_stapling_verify       on;
    resolver                  8.8.8.8 8.8.4.4;

    ssl_certificate           /etc/letsencrypt/live/$domain/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/$domain/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/$domain/chain.pem;

    access_log                /dev/stdout;
    error_log                 /dev/stderr info;

    location / {
        proxy_pass http://api:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        if ($http_origin ~* "^https:\/\/(.+\.){0,1}restful-api\.(com\.au|xyz)$" ) {
          # "Always" means we serve these even when the HTTP status !== 200
          add_header Access-Control-Allow-Origin "$http_origin" always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;
          add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
          add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS, PUT, DELETE' always;
        }

        add_header Content-Security-Policy "default-src 'self'; script-src 'unsafe-inline' 'self'; img-src 'self'; style-src 'self' 'unsafe-inline'; font-src 'self'; frame-src 'none'; object-src 'none';" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options nosniff always;
    }
}

